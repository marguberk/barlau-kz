# Generated by Django 5.1.6 on 2025-05-03 09:56

import django.db.models.deletion
import logistics.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('logistics', '0006_remove_vehiclemaintenance_created_by_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='vehicle',
            name='cargo_capacity',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Грузоподъемность (кг)'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='chassis_number',
            field=models.CharField(blank=True, max_length=30, null=True, verbose_name='Номер шасси'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='engine_capacity',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='Объем двигателя (л)'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='engine_number',
            field=models.CharField(blank=True, max_length=30, null=True, verbose_name='Номер двигателя'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='fuel_type',
            field=models.CharField(blank=True, choices=[('DIESEL', 'Дизель'), ('PETROL', 'Бензин'), ('GAS', 'Газ'), ('HYBRID', 'Гибрид'), ('ELECTRIC', 'Электро')], max_length=20, null=True, verbose_name='Тип топлива'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='height',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Высота (м)'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='length',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Длина (м)'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='max_weight',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Максимальная масса (кг)'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vin_number',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='VIN номер'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='width',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Ширина (м)'),
        ),
        migrations.CreateModel(
            name='VehicleDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('REGISTRATION', 'Свидетельство о регистрации'), ('INSURANCE', 'Страховка'), ('TECHNICAL_INSPECTION', 'Техосмотр'), ('SERVICE_BOOK', 'Сервисная книжка'), ('OTHER', 'Прочее')], max_length=30, verbose_name='Тип документа')),
                ('number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Номер документа')),
                ('issue_date', models.DateField(verbose_name='Дата выдачи')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('issuing_authority', models.CharField(blank=True, max_length=100, null=True, verbose_name='Кем выдан')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Примечание')),
                ('file', models.FileField(blank=True, null=True, upload_to=logistics.models.vehicle_document_upload_path, verbose_name='Файл документа')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_vehicle_documents', to=settings.AUTH_USER_MODEL, verbose_name='Кем создан')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='logistics.vehicle', verbose_name='Транспорт')),
            ],
            options={
                'verbose_name': 'Документ транспорта',
                'verbose_name_plural': 'Документы транспорта',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='VehicleMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_type', models.CharField(choices=[('ROUTINE', 'Плановое ТО'), ('REPAIR', 'Ремонт'), ('INSPECTION', 'Осмотр'), ('OTHER', 'Прочее')], max_length=30, verbose_name='Тип обслуживания')),
                ('date', models.DateField(verbose_name='Дата проведения')),
                ('mileage', models.IntegerField(blank=True, null=True, verbose_name='Пробег (км)')),
                ('description', models.TextField(verbose_name='Описание работ')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Стоимость (тг)')),
                ('next_maintenance_date', models.DateField(blank=True, null=True, verbose_name='Дата следующего ТО')),
                ('next_maintenance_mileage', models.IntegerField(blank=True, null=True, verbose_name='Пробег для следующего ТО (км)')),
                ('performed_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='Кем проведено')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_vehicle_maintenance', to=settings.AUTH_USER_MODEL, verbose_name='Кем создано')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='logistics.vehicle', verbose_name='Транспорт')),
            ],
            options={
                'verbose_name': 'Техническое обслуживание',
                'verbose_name_plural': 'Техническое обслуживание',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='VehiclePhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to=logistics.models.vehicle_photo_upload_path, verbose_name='Фотография')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='Описание')),
                ('is_main', models.BooleanField(default=False, verbose_name='Основное фото')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Кем загружено')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='logistics.vehicle', verbose_name='Транспорт')),
            ],
            options={
                'verbose_name': 'Фотография транспорта',
                'verbose_name_plural': 'Фотографии транспорта',
                'ordering': ['-is_main', '-uploaded_at'],
            },
        ),
    ]
