from django.core.management.base import BaseCommand
from core.models import Trip, ChecklistTemplate, TripChecklist, ChecklistItem
from logistics.models import Vehicle
from accounts.models import User


class Command(BaseCommand):
    help = '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–µ–∑–¥–∫–∏ —Å —á–µ–∫-–ª–∏—Å—Ç–æ–º'

    def handle(self, *args, **options):
        self.stdout.write("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —á–µ–∫-–ª–∏—Å—Ç–∞ ===")
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –≤–æ–¥–∏—Ç–µ–ª—è –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
            driver = User.objects.filter(role='DRIVER').first()
            if not driver:
                self.stdout.write(self.style.ERROR("‚ùå –í–æ–¥–∏—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"))
                return
            
            vehicle = Vehicle.objects.filter(is_archived=False).first()
            if not vehicle:
                self.stdout.write(self.style.ERROR("‚ùå –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"))
                return
            
            self.stdout.write(f"‚úÖ –ù–∞–π–¥–µ–Ω –≤–æ–¥–∏—Ç–µ–ª—å: {driver.get_full_name()}")
            self.stdout.write(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç: {vehicle.number}")
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–æ–µ–∑–¥–∫—É
            trip = Trip.objects.create(
                title="–¢–µ—Å—Ç–æ–≤–∞—è –ø–æ–µ–∑–¥–∫–∞ —Å —á–µ–∫-–ª–∏—Å—Ç–æ–º",
                driver=driver,
                vehicle=vehicle,
                start_address="–ê–ª–º–∞—Ç—ã, –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω",
                end_address="–ê—Å—Ç–∞–Ω–∞, –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω",
                cargo_description="–¢–µ—Å—Ç–æ–≤—ã–π –≥—Ä—É–∑",
                start_latitude=43.238949,
                start_longitude=76.889709,
                end_latitude=51.169392,
                end_longitude=71.449074,
                status='PLANNED'
            )
            self.stdout.write(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–æ–µ–∑–¥–∫–∞: {trip.title} (ID: {trip.id})")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–±–ª–æ–Ω–æ–≤ —á–µ–∫-–ª–∏—Å—Ç–∞
            templates_count = ChecklistTemplate.objects.filter(is_active=True).count()
            self.stdout.write(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —à–∞–±–ª–æ–Ω–æ–≤ —á–µ–∫-–ª–∏—Å—Ç–∞: {templates_count}")
            
            if templates_count == 0:
                self.stdout.write(self.style.ERROR("‚ùå –®–∞–±–ª–æ–Ω—ã —á–µ–∫-–ª–∏—Å—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: python manage.py create_checklist_templates"))
                return
            
            # –°–æ–∑–¥–∞–µ–º —á–µ–∫-–ª–∏—Å—Ç –¥–ª—è –ø–æ–µ–∑–¥–∫–∏
            checklist = TripChecklist.objects.create(
                trip=trip,
                status='PENDING'
            )
            self.stdout.write(f"‚úÖ –°–æ–∑–¥–∞–Ω —á–µ–∫-–ª–∏—Å—Ç: ID {checklist.id}")
            
            # –°–æ–∑–¥–∞–µ–º –ø—É–Ω–∫—Ç—ã —á–µ–∫-–ª–∏—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —à–∞–±–ª–æ–Ω–æ–≤
            templates = ChecklistTemplate.objects.filter(is_active=True).order_by('category', 'order')
            created_items = 0
            
            for template in templates:
                ChecklistItem.objects.create(
                    checklist=checklist,
                    template=template,
                    is_checked=False,
                    is_ok=False
                )
                created_items += 1
            
            self.stdout.write(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –ø—É–Ω–∫—Ç–æ–≤ —á–µ–∫-–ª–∏—Å—Ç–∞: {created_items}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            total_items = checklist.items.count()
            checked_items = checklist.items.filter(is_checked=True).count()
            completion_percentage = (checked_items / total_items * 100) if total_items > 0 else 0
            
            self.stdout.write("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–µ–∫-–ª–∏—Å—Ç–∞:")
            self.stdout.write(f"   - –í—Å–µ–≥–æ –ø—É–Ω–∫—Ç–æ–≤: {total_items}")
            self.stdout.write(f"   - –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {checked_items}")
            self.stdout.write(f"   - –ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {completion_percentage:.1f}%")
            self.stdout.write(f"   - –°—Ç–∞—Ç—É—Å: {checklist.get_status_display()}")
            
            self.stdout.write(self.style.SUCCESS("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"))
            self.stdout.write("üìù –ß–µ–∫-–ª–∏—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000/checklist/")
            self.stdout.write("üöõ –ü–æ–µ–∑–¥–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000/map/")
            
        except Exception as e:
            self.stdout.write(self.style.ERROR(f"‚ùå –û—à–∏–±–∫–∞: {e}"))
            import traceback
            traceback.print_exc() 