# Generated by Django 5.1.6 on 2025-05-18 12:33

import accounts.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='phone number')),
                ('role', models.CharField(choices=[('DIRECTOR', 'Директор'), ('ACCOUNTANT', 'Бухгалтер'), ('DRIVER', 'Водитель'), ('SUPPLIER', 'Снабженец'), ('TECH', 'Техотдел'), ('SUPERADMIN', 'Суперадмин')], default='DRIVER', max_length=20, verbose_name='role')),
                ('position', models.CharField(blank=True, max_length=100, verbose_name='position')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='employee_photos/', verbose_name='photo')),
                ('experience', models.TextField(blank=True, verbose_name='work experience')),
                ('education', models.TextField(blank=True, verbose_name='education')),
                ('skills', models.TextField(blank=True, verbose_name='skills')),
                ('certifications', models.TextField(blank=True, verbose_name='certifications')),
                ('languages', models.TextField(blank=True, verbose_name='languages')),
                ('desired_salary', models.CharField(blank=True, max_length=50, verbose_name='desired salary')),
                ('age', models.PositiveIntegerField(blank=True, null=True, verbose_name='age')),
                ('location', models.CharField(blank=True, max_length=100, verbose_name='location')),
                ('skype', models.CharField(blank=True, max_length=50, verbose_name='skype')),
                ('linkedin', models.URLField(blank=True, verbose_name='linkedin')),
                ('portfolio_url', models.URLField(blank=True, verbose_name='portfolio url')),
                ('about_me', models.TextField(blank=True, verbose_name='about me')),
                ('key_skills', models.TextField(blank=True, verbose_name='key skills')),
                ('achievements', models.TextField(blank=True, verbose_name='achievements')),
                ('courses', models.TextField(blank=True, verbose_name='courses')),
                ('publications', models.TextField(blank=True, verbose_name='publications')),
                ('recommendations', models.TextField(blank=True, verbose_name='recommendations')),
                ('hobbies', models.TextField(blank=True, verbose_name='hobbies')),
                ('recommendation_file', models.FileField(blank=True, null=True, upload_to=accounts.models.user_recommendation_path, verbose_name='recommendation file')),
                ('current_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('current_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('last_location_update', models.DateTimeField(blank=True, null=True)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('firebase_uid', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('is_archived', models.BooleanField(default=False, help_text='Designates whether this user is archived and no longer active.', verbose_name='archived')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', related_query_name='custom_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', related_query_name='custom_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
